#!/bin/bash

WWW_DIR="/var/www/repomanager"
DATA_DIR="/var/lib/repomanager"

# Docker environment variables
#  - FQDN=server.example.com
#  - MAX_UPLOAD_SIZE=xxM
#  - PHP_MEMORY_LIMIT=xxM
#  - NGINX_LISTEN_PORT=xxxx
#  - WEBSOCKET_LISTEN_PORT=xxxx

# Quit if FQDN is not set
if [ -z "$FQDN" ];then
    echo "FQDN environment variable must be set"
    exit 1
fi

# Set FQDN
# Postfix/mail configuration
postconf -e "myhostname = $FQDN"
echo "$FQDN" > /etc/mailname
# Repomanager configuration
echo "$FQDN" > "$WWW_DIR/.fqdn"

# Set max upload size
if [ ! -z "$MAX_UPLOAD_SIZE" ];then
    # Nginx configuration
    sed -i "s/client_max_body_size.*$/client_max_body_size ${MAX_UPLOAD_SIZE};/g" /etc/nginx/sites-enabled/repomanager.conf
    # PHP configuration
    sed -i "s/^upload_max_filesize.*$/upload_max_filesize = ${MAX_UPLOAD_SIZE}/g" /etc/php/8.3/fpm/php.ini
    sed -i "s/^post_max_size.*$/post_max_size = ${MAX_UPLOAD_SIZE}/g" /etc/php/8.3/fpm/php.ini
fi

# Set PHP memory limit
if [ ! -z "$PHP_MEMORY_LIMIT" ];then
    sed -i "s/^memory_limit.*$/memory_limit = ${PHP_MEMORY_LIMIT}/g" /etc/php/8.3/fpm/php.ini
fi

# Set Nginx listen port
if [ ! -z "$NGINX_LISTEN_PORT" ];then
    sed -i "s/listen 8080;/listen ${NGINX_LISTEN_PORT};/g" /etc/nginx/sites-enabled/repomanager.conf
fi

# Set WebSocket server listen port
if [ ! -z "$WEBSOCKET_LISTEN_PORT" ];then
    sed -i "s/set \$WEBSOCKET_LISTEN_PORT.*;/set \$WEBSOCKET_LISTEN_PORT $WEBSOCKET_LISTEN_PORT;/g" /etc/nginx/sites-enabled/repomanager.conf
    # Also create a .wss file
    echo "$WEBSOCKET_LISTEN_PORT" > "$WWW_DIR/.wss"
fi

# If app.yaml does not exist, create it
if [ ! -f "$DATA_DIR/app.yaml" ];then
    cp "$WWW_DIR/templates/app.yaml" "$DATA_DIR/app.yaml"
fi

# Apply permissions
/bin/bash $WWW_DIR/bin/repomanager -p

# Start services
/usr/sbin/service php8.3-fpm start
/usr/sbin/service nginx start
/usr/sbin/service postfix start

# Initialize and update database (if needed)
/bin/su -s /bin/bash -c "/usr/bin/php $WWW_DIR/tools/database/initialize.php" www-data &&
/bin/su -s /bin/bash -c "/usr/bin/php $WWW_DIR/tools/database/update.php" www-data

if [ $? -ne 0 ];then
    echo "Database initialization failed"
    exit 1
fi

# Start shell service in background
/bin/bash "$WWW_DIR/bin/service" &

# Start repomanager service
/bin/su -s /bin/bash -c "/usr/bin/php $WWW_DIR/tools/service.php" www-data

/bin/bash